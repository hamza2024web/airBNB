<!DOCTYPE html>
<html lang="fr">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Tableau de Bord - Propri√©taires</title>
    <script src="https://cdn.tailwindcss.com"></script>
</head>

<body class="bg-gray-50">
    <div class="flex h-screen">
        <!-- Enhanced Sidebar with better gradient and hover effects -->
        <aside class="w-72 bg-gradient-to-br from-blue-900 via-blue-800 to-blue-900 text-white shadow-2xl">
            <h1 class="text-3xl font-bold px-8 py-6 border-b border-blue-700/50">DashBoard</h1>
            <nav class="p-4">
                <ul class="space-y-2">
                    <li><a href="/proprietaire" class="flex items-center space-x-4 p-3 rounded-xl hover:bg-white/10 transition-all duration-300">
                            <span class="text-xl">üè†</span>
                            <span class="font-medium">Accueil</span>
                        </a></li>
                    <li><a href="/messageProprietaire" class="flex items-center space-x-4 p-3 rounded-xl hover:bg-white/10 transition-all duration-300">
                            <span class="text-xl">üìã</span>
                            <span class="font-medium">Messages</span>
                        </a></li>
                    <li><a href="/statistique" class="flex items-center space-x-4 p-3 rounded-xl hover:bg-white/10 transition-all duration-300">
                            <span class="text-xl">üìä</span>
                            <span class="font-medium">Statistiques</span>
                        </a></li>
                    <li><a href="/listreservations" class="flex items-center space-x-4 p-3 rounded-xl hover:bg-white/10 transition-all duration-300">
                            <span class="text-xl">üìÖ</span>
                            <span class="font-medium">List des Reservations</span>
                        </a></li>
                    <li><a href="#" class="flex items-center space-x-3 p-3 rounded-lg hover:bg-red-600 transition">
                            <span class="text-xl">‚öôÔ∏è</span>
                            <span class="font-medium">D√©connexion</span>
                        </a></li>
                </ul>
            </nav>
        </aside>

        <!-- Main Content with improved spacing and shadows -->
        <main class="flex-1 p-8 overflow-y-auto">
            <header class="bg-white/80 backdrop-blur-md p-8 rounded-2xl mb-8 flex justify-between items-center border border-white/20 shadow-lg">
                <div>
                    <h2 class="text-4xl font-bold text-gray-800 mb-2">Tableau de Bord</h2>
                    <p class="text-gray-500">G√©rez vos propri√©t√©s et r√©servations</p>
                </div>
                <div class="flex items-center gap-6">
                    <button class="px-6 py-3 bg-gradient-to-r from-blue-600 to-indigo-600 text-white rounded-xl hover:from-blue-700 hover:to-indigo-700 transition-all duration-300 shadow-lg hover:shadow-xl transform hover:-translate-y-0.5 flex items-center gap-2">
                        <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4" />
                        </svg>
                        Nouvelle Propri√©t√©
                    </button>
                </div>
            </header>

            <!-- Enhanced Properties Table -->
            <div class="bg-white p-8 rounded-2xl shadow-lg border border-gray-100">
                <h3 class="text-2xl font-bold text-gray-800 mb-8 flex items-center gap-3">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8 text-blue-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6" />
                    </svg>
                    Mes Propri√©t√©s
                </h3>
                <div class="overflow-x-auto rounded-xl border border-gray-200">
                    <table class="w-full">
                        <thead>
                            <tr class="bg-gray-50 border-b border-gray-200">
                                <th class="px-6 py-4 text-left text-sm font-semibold text-gray-600 uppercase tracking-wider">Title</th>
                                <th class="px-6 py-4 text-left text-sm font-semibold text-gray-600 uppercase tracking-wider">Photo</th>
                                <th class="px-6 py-4 text-left text-sm font-semibold text-gray-600 uppercase tracking-wider">Description</th>
                                <th class="px-6 py-4 text-left text-sm font-semibold text-gray-600 uppercase tracking-wider">Prix</th>
                                <th class="px-6 py-4 text-left text-sm font-semibold text-gray-600 uppercase tracking-wider">Disponibilit√©</th>
                                <th class="px-6 py-4 text-left text-sm font-semibold text-gray-600 uppercase tracking-wider">Cat√©gorie</th>
                                <th class="px-6 py-4 text-left text-sm font-semibold text-gray-600 uppercase tracking-wider">Change the Disponabilit√©</th>
                                <th class="px-6 py-4 text-left text-sm font-semibold text-gray-600 uppercase tracking-wider">Status</th>
                                <th class="px-6 py-4 text-left text-sm font-semibold text-gray-600 uppercase tracking-wider">Action</th>
                            </tr>
                        </thead>
                        <tbody class="divide-y divide-gray-200 bg-white">
                            {% for result in results %}
                            <tr class="hover:bg-gray-50/75 transition-all duration-200">
                                <td class="px-6 py-4 whitespace-nowrap">
                                    <div class="font-medium text-gray-900">{{ result.title }}</div>
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap">
                                    <img src="{{ result.photo }}" alt="Annonce Photo"
                                        class="w-24 h-24 rounded-xl shadow-md object-cover hover:shadow-xl transition-all duration-200 transform hover:scale-105">
                                </td>
                                <td class="px-6 py-4">
                                    <div class="text-sm text-gray-600 max-w-xs truncate hover:text-clip hover:overflow-visible">
                                        {{ result.description }}
                                    </div>
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap">
                                    <div class="text-lg font-semibold text-blue-600">{{ result.prix }}‚Ç¨<span class="text-sm text-gray-500">/mois</span></div>
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap">
                                    <span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium
                                        {% if result.disponibilite == 'Disponible' %}
                                            bg-green-100 text-green-800 ring-1 ring-green-600/20
                                        {% elseif result.disponibilite == 'R√©serv√©' %}
                                            bg-blue-100 text-blue-800 ring-1 ring-blue-600/20
                                        {% elseif result.disponibilite == 'En attente' %}
                                            bg-yellow-100 text-yellow-800 ring-1 ring-yellow-600/20
                                        {% elseif result.disponibilite == 'Vendu' %}
                                            bg-red-100 text-red-800 ring-1 ring-red-600/20
                                        {% endif %}
                                    ">
                                        {{ result.disponibilite }}
                                    </span>
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap">
                                    <div class="text-sm text-gray-600">{{ result.categoryname }}</div>
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap">
                                    <form action="/disponibilite" method="POST" class="flex flex-wrap gap-2">
                                        <input type="hidden" name="id" value="{{ result.id }}">
                                        {% if result.disponibilite != "Disponible" %}
                                        <button type="submit" name="disponibilite" value="Disponible"
                                            class="inline-flex items-center px-3 py-1.5 text-sm font-medium text-white bg-green-500 rounded-lg shadow-sm hover:bg-green-600 transition-all duration-200 hover:shadow-md">
                                            Disponible
                                        </button>
                                        {% endif %}
                                        {% if result.disponibilite != "R√©serv√©" %}
                                        <button type="submit" name="disponibilite" value="R√©serv√©"
                                            class="inline-flex items-center px-3 py-1.5 text-sm font-medium text-white bg-blue-500 rounded-lg shadow-sm hover:bg-blue-600 transition-all duration-200 hover:shadow-md">
                                            R√©serv√©
                                        </button>
                                        {% endif %}
                                        {% if result.disponibilite != "En attente" %}
                                        <button type="submit" name="disponibilite" value="En attente"
                                            class="inline-flex items-center px-3 py-1.5 text-sm font-medium text-white bg-yellow-500 rounded-lg shadow-sm hover:bg-yellow-600 transition-all duration-200 hover:shadow-md">
                                            En attente
                                        </button>
                                        {% endif %}
                                        {% if result.disponibilite != "Vendu" %}
                                        <button type="submit" name="disponibilite" value="Vendu"
                                            class="inline-flex items-center px-3 py-1.5 text-sm font-medium text-white bg-red-500 rounded-lg shadow-sm hover:bg-red-600 transition-all duration-200 hover:shadow-md">
                                            Vendu
                                        </button>
                                        {% endif %}
                                    </form>
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap">
                                    <span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium
                                        {% if result.statut == 'Valid√©' %}
                                            bg-green-100 text-green-800 ring-1 ring-green-600/20
                                        {% else %}
                                            bg-red-100 text-red-800 ring-1 ring-red-600/20
                                        {% endif %}
                                    ">
                                        {{ result.statut }}
                                    </span>
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap">
                                    <button class="inline-flex items-center px-4 py-2 text-sm font-medium text-blue-600 hover:text-blue-800 transition-colors duration-200"
                                        onclick="showAnnonces('{{ result.title }}', '{{ result.photo }}', '{{ result.description }}', '{{ result.prix }}', '{{ result.disponibilite }}', '{{ result.categoryname }}')">
                                        Voir plus
                                    </button>
                                </td>
                            </tr>
                            {% endfor %}
                        </tbody>
                    </table>
                </div>
            </div>

            <!-- Enhanced Modal -->
            <div id="annonceDetails" class="hidden fixed inset-0 bg-gray-900/75 backdrop-blur-sm flex justify-center items-center z-50">
                <div class="bg-white p-6 md:p-8 rounded-2xl shadow-2xl w-full max-w-2xl mx-4 max-h-[90vh] overflow-y-auto transform transition-all duration-300 scale-95 opacity-0" id="modalContent">
                    <!-- Header -->
                    <div class="flex justify-between items-center mb-6">
                        <h2 class="text-2xl font-bold text-gray-800 line-clamp-2" id="detailTitle"></h2>
                        <button onclick="closeAnnonces()" class="p-2 hover:bg-gray-100 rounded-full transition-colors">
                            <svg class="w-6 h-6 text-gray-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                            </svg>
                        </button>
                    </div>

                    <!-- Image Container -->
                    <div class="relative mb-6 rounded-xl overflow-hidden shadow-lg">
                        <img id="detailPhoto" src="" alt="Property Photo" class="w-full h-72 object-cover transition-transform duration-300 hover:scale-105">
                        <div class="absolute top-4 right-4">
                            <span class="px-4 py-2 bg-blue-600 text-white rounded-full font-bold shadow-lg">
                                <span id="detailPrix"></span> ‚Ç¨/mois
                            </span>
                        </div>
                    </div>

                    <!-- Content -->
                    <div class="space-y-4">
                        <div class="bg-gray-50 p-4 rounded-xl">
                            <div class="flex items-center space-x-2 mb-2">
                                <div class="w-3 h-3 rounded-full" id="availabilityDot"></div>
                                <p class="font-semibold">
                                    Disponibilit√©: <span id="detailDisponibilite" class="font-normal"></span>
                                </p>
                            </div>
                            <p class="text-gray-600">
                                Cat√©gorie: <span id="detailCategory" class="font-medium"></span>
                            </p>
                        </div>

                        <div class="prose max-w-none">
                            <p class="text-gray-600 leading-relaxed" id="detailDescription"></p>
                        </div>
                    </div>

                    <!-- Footer -->
                    <div class="mt-8 flex justify-end">
                        <button onclick="closeAnnonces()" class="px-6 py-3 bg-red-600 text-white rounded-xl hover:bg-red-700 transition-all duration-300 shadow-lg hover:shadow-xl transform hover:-translate-y-0.5 active:translate-y-0">
                            Fermer
                        </button>
                    </div>
                </div>
            </div>
        </main>
    </div>

    <script>
        function showAnnonces(title, photo, description, prix, disponibilite, category) {

            const modal = document.getElementById("annonceDetails");
            const modalContent = document.getElementById("modalContent");

            document.getElementById("detailTitle").innerText = title;
            document.getElementById("detailPhoto").src = photo;
            document.getElementById("detailDescription").innerText = description;
            document.getElementById("detailPrix").innerText = prix;
            document.getElementById("detailDisponibilite").innerText = disponibilite;
            document.getElementById("detailCategory").innerText = category;

            const availabilityDot = document.getElementById("availabilityDot");
            availabilityDot.className = "w-3 h-3 rounded-full";
            availabilityDot.classList.add(
                disponibilite.toLowerCase().includes('disponible') ? 'bg-green-500' : 'bg-red-500'
            );

            modal.classList.remove("hidden");

            requestAnimationFrame(() => {
                modalContent.classList.remove("scale-95", "opacity-0");
                modalContent.classList.add("scale-100", "opacity-100");
            });
        }

        function closeAnnonces() {
            const modal = document.getElementById("annonceDetails");
            const modalContent = document.getElementById("modalContent");

            modalContent.classList.remove("scale-100", "opacity-100");
            modalContent.classList.add("scale-95", "opacity-0");

            setTimeout(() => {
                modal.classList.add("hidden");
                modalContent.classList.remove("scale-95", "opacity-0");
            }, 300);
        }

        document.getElementById("annonceDetails").addEventListener("click", (e) => {
            if (e.target.id === "annonceDetails") {
                closeAnnonces();
            }
        });

        document.addEventListener("keydown", (e) => {
            if (e.key === "Escape" && !document.getElementById("annonceDetails").classList.contains("hidden")) {
                closeAnnonces();
            }
        });
    </script>
    <script>
        document.getElementById('exportExcel').addEventListener('click', function() {
            // Obtenir toutes les lignes visibles
            const rows = Array.from(document.querySelectorAll('tbody tr')).filter(row =>
                row.style.display !== 'none'
            );

            // Transformer les donn√©es
            const data = rows.map(row => {
                const nameCell = row.querySelector('td:nth-child(1)');
                // R√©cup√©rer uniquement le texte du nom en excluant l'initiale
                const fullNameWithoutInitial = nameCell.textContent.replace(/^\s+/, '').trim();

                return {
                    'Nom Complet': fullNameWithoutInitial,
                    'Email': row.querySelector('td:nth-child(2)').textContent.trim(),
                    'annonces': row.querySelector('td:nth-child(3) span').textContent.trim(),
                    'Date de reservation': row.querySelector('td:nth-child(4)').textContent.trim()
                };
            });

            // Cr√©er la feuille Excel
            const worksheet = XLSX.utils.json_to_sheet(data);
            const workbook = XLSX.utils.book_new();
            XLSX.utils.book_append_sheet(workbook, worksheet, "Liste des √©tudiants");

            // Styliser l'en-t√™te
            const range = XLSX.utils.decode_range(worksheet['!ref']);

            // Style pour l'en-t√™te
            const headerStyle = {
                font: {
                    bold: true,
                    color: {
                        rgb: "FFFFFF"
                    }
                },
                fill: {
                    fgColor: {
                        rgb: "4338CA"
                    }
                },
                alignment: {
                    horizontal: 'center',
                    vertical: 'center'
                }
            };

            // Appliquer le style √† l'en-t√™te
            for (let C = range.s.c; C <= range.e.c; ++C) {
                const address = XLSX.utils.encode_cell({
                    r: 0,
                    c: C
                });
                if (!worksheet[address]) continue;
                worksheet[address].s = headerStyle;
            }

            // Ajuster la largeur des colonnes
            const columnWidths = data.reduce((acc, row) => {
                Object.entries(row).forEach(([key, value], index) => {
                    const valueLength = value ? value.toString().length : 0;
                    acc[index] = Math.max(acc[index] || 0, valueLength, key.length);
                });
                return acc;
            }, []);

            worksheet['!cols'] = columnWidths.map(width => ({
                width: width + 2
            }));

            // Style pour les cellules de donn√©es
            for (let R = 1; R <= range.e.r; ++R) {
                for (let C = range.s.c; C <= range.e.c; ++C) {
                    const address = XLSX.utils.encode_cell({
                        r: R,
                        c: C
                    });
                    if (!worksheet[address]) continue;

                    worksheet[address].s = {
                        font: {
                            name: "Arial"
                        },
                        alignment: {
                            vertical: 'center'
                        },
                        border: {
                            top: {
                                style: 'thin',
                                color: {
                                    rgb: "E5E7EB"
                                }
                            },
                            bottom: {
                                style: 'thin',
                                color: {
                                    rgb: "E5E7EB"
                                }
                            },
                            left: {
                                style: 'thin',
                                color: {
                                    rgb: "E5E7EB"
                                }
                            },
                            right: {
                                style: 'thin',
                                color: {
                                    rgb: "E5E7EB"
                                }
                            }
                        }
                    };
                }
            }

            // G√©n√©rer et t√©l√©charger le fichier
            const date = new Date().toLocaleDateString('fr-FR').replace(/\//g, '-');
            XLSX.writeFile(workbook, `liste_etudiants_${date}.xlsx`);
        });
    </script>
</body>

</html>